name: "Release"
on:
  workflow_call:
defaults:
  run:
    shell: bash

jobs:
  release-node:
    name: "Semantic Release"
    runs-on: ubuntu-latest
    outputs:
      RELEASE_VERSION: ${{ steps.set-version.outputs.RELEASE_VERSION }}
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false
      
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      
      - name: "Obtain Github App token"
        id: app-token
        uses: getsentry/action-github-app-token@v2.0.0
        with:
          app_id: ${{ secrets.BOT_APP_ID }}
          private_key: ${{ secrets.BOT_APP_PRIVATE_KEY }}

      - name: "Clean install dependencies"
        run: npm ci

      - name: "Run npm build"
        run: npm run build

      - name: "Execute Semantic Release"
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Set release version number
        id: set-version
        run: |
          RELEASE_VERSION=$( git describe --tags "${{ github.sha }}")
          echo "RELEASE_VERSION=$RELEASE_VERSION" >> "$GITHUB_OUTPUT"

  release-docker:
    name: "Deploy custom LogTo Docker image - Production"
    runs-on: ubuntu-latest
    needs: release-node
    if: ${{ github.ref_name == 'main' }}
    env:
      IMAGE_NAME: cheqd/creds-auth
    environment: 
      name: production
      url: https://admin-auth.creds.zone

    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        id: buildx
        with:
          install: true
          version: latest

      - name: Install DigitalOcean CLI
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Login to DigitalOcean Container Registry
        run: doctl registry login --expiry-seconds 600
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Docker image metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ env.IMAGE_NAME }}
            registry.digitalocean.com/${{ env.IMAGE_NAME }}
          flavor: |
            latest=auto
          tags: |
            type=semver,pattern={{version}},value=${{ needs.release-node.outputs.RELEASE_VERSION }}
            type=raw,value=production-latest
            type=sha,format=long
          labels: |
            org.opencontainers.image.description="Custom LogTo Docker image"
            org.opencontainers.image.source="https://github.com/cheqd/creds-auth"
            org.opencontainers.image.vendor="Cheqd Foundation Limited"
            org.opencontainers.image.created={{date 'dddd, MMMM Do YYYY, h:mm:ss a'}}
            org.opencontainers.image.documentation="https://product.cheqd.io/"

      - name: "Build LogTo image"
        uses: docker/build-push-action@v4
        with:
          context: .
          file: docker/Dockerfile
          platforms: linux/amd64
          load: true
          target: runner
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=min

      - name: Push image to GitHub Container Registry
        run: docker image push --all-tags ghcr.io/${{ env.IMAGE_NAME }}
  
      - name: Push image to DigitalOcean Container Registry
        run: docker image push --all-tags registry.digitalocean.com/${{ env.IMAGE_NAME }}
   
