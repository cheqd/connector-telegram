name: "Release"
on:
  workflow_call:
defaults:
  run:
    shell: bash
permissions:
  contents: write
  packages: write


jobs:

  release-docker:
    name: "Logto Docker image with built-in custom connectors"
    runs-on: ubuntu-latest
    if: ${{ github.ref_name == 'main' }}
    env:
      IMAGE_NAME: ${{ github.repository }}
      env_var: ${{ vars.ENV_CONTEXT_VAR }
    environment: 
      name: production
      url: https://auth.creds.xyz

    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        id: buildx
        with:
          install: true
          version: latest

      - name: Install DigitalOcean CLI
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Login to DigitalOcean Container Registry
        run: doctl registry login --expiry-seconds 600

      - name: Configure Docker image metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: registry.digitalocean.com/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=production-latest
            type=sha,format=long
          labels: |
            org.opencontainers.image.description="Logto Docker image with custom connectors"
            org.opencontainers.image.source="https://github.com/cheqd/community-credentials-auth"
            org.opencontainers.image.vendor="Cheqd Foundation Limited"
            org.opencontainers.image.created={{date 'dddd, MMMM Do YYYY, h:mm:ss a'}}
            org.opencontainers.image.documentation="https://product.cheqd.io/"

      - name: Build Logto image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64
          load: true
          target: runner
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=min
          build-args: |
            ADMIN_ENDPOINT: ${vars.ADMIN_ENDPOINT}
            ENDPOINT: ${vars.ENDPOINT}

      - name: Push Logto image
        run: docker image push --all-tags registry.digitalocean.com/${{ env.IMAGE_NAME }}

  cache-purge:
    name: "Purge branch Actions cache"
    needs: release-docker
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    
    steps:

      - name: "Delete Branch Cache Action"
        uses: snnaplab/delete-branch-cache-action@v1.0.0
        with:
          # Specify explicitly because the ref at the time of merging will be a branch name such as 'main', 'develop'
          ref: refs/pull/${{ github.event.number }}/merge
          github-token: ${{ secrets.GITHUB_TOKEN }}
